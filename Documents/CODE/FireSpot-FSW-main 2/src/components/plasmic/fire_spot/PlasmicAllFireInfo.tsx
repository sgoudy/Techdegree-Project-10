// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iaGC8N7icN64RQS5kdk5ev
// Component: Eu77MqQRyn
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import FireBlock from "../../FireBlock"; // plasmic-import: -nqoWOXgpB/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_fire_spot.module.css"; // plasmic-import: iaGC8N7icN64RQS5kdk5ev/projectcss
import * as sty from "./PlasmicAllFireInfo.module.css"; // plasmic-import: Eu77MqQRyn/css

import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: saqBp-KweY/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: _hIlKDMChB/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3"; // plasmic-import: lIZFbyKS7s/icon
import HomeIcon from "./icons/PlasmicIcon__Home"; // plasmic-import: F1GpC1vB1p_/icon

export type PlasmicAllFireInfo__VariantMembers = {};

export type PlasmicAllFireInfo__VariantsArgs = {};
type VariantPropType = keyof PlasmicAllFireInfo__VariantsArgs;
export const PlasmicAllFireInfo__VariantProps = new Array<VariantPropType>();

export type PlasmicAllFireInfo__ArgsType = {};
type ArgPropType = keyof PlasmicAllFireInfo__ArgsType;
export const PlasmicAllFireInfo__ArgProps = new Array<ArgPropType>();

export type PlasmicAllFireInfo__OverridesType = {
  root?: p.Flex<"div">;
  iPhone11ProMax6?: p.Flex<"div">;
  rectangle1?: p.Flex<"div">;
  avatar?: p.Flex<"div">;
  miscIconsBackground?: p.Flex<"div">;
  iconsButton?: p.Flex<"div">;
  _03?: p.Flex<"div">;
  textOnlyWithButton?: p.Flex<"div">;
  background?: p.Flex<"div">;
  title?: p.Flex<"div">;
  title2?: p.Flex<"div">;
  body?: p.Flex<"div">;
  ghostDefaultLight?: p.Flex<"div">;
  _8?: p.Flex<"div">;
  textOnlyWithButton2?: p.Flex<"div">;
  background2?: p.Flex<"div">;
  title3?: p.Flex<"div">;
  title4?: p.Flex<"div">;
  body2?: p.Flex<"div">;
  ghostDefaultLight2?: p.Flex<"div">;
  _9?: p.Flex<"div">;
  fireBlock?: p.Flex<typeof FireBlock>;
  _7?: p.Flex<"div">;
  textOnlyWithButton4?: p.Flex<"div">;
  background4?: p.Flex<"div">;
  title7?: p.Flex<"div">;
  title8?: p.Flex<"div">;
  body4?: p.Flex<"div">;
  ghostDefaultLight4?: p.Flex<"div">;
  _6?: p.Flex<"div">;
  textOnlyWithButton5?: p.Flex<"div">;
  background5?: p.Flex<"div">;
  title9?: p.Flex<"div">;
  title10?: p.Flex<"div">;
  body5?: p.Flex<"div">;
  ghostDefaultLight5?: p.Flex<"div">;
  _4?: p.Flex<"div">;
  textOnlyWithButton6?: p.Flex<"div">;
  background6?: p.Flex<"div">;
  title11?: p.Flex<"div">;
  title12?: p.Flex<"div">;
  body6?: p.Flex<"div">;
  ghostDefaultLight6?: p.Flex<"div">;
};

export interface DefaultAllFireInfoProps {
  className?: string;
}

function PlasmicAllFireInfo__RenderFunc(props: {
  variants: PlasmicAllFireInfo__VariantsArgs;
  args: PlasmicAllFireInfo__ArgsType;
  overrides: PlasmicAllFireInfo__OverridesType;
  dataFetches?: PlasmicAllFireInfo__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <React.Fragment>
      {}
      {}

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"iPhone11ProMax6"}
            data-plasmic-override={overrides.iPhone11ProMax6}
            className={classNames(defaultcss.all, sty.iPhone11ProMax6)}
          >
            <div
              data-plasmic-name={"rectangle1"}
              data-plasmic-override={overrides.rectangle1}
              className={classNames(defaultcss.all, sty.rectangle1)}
            />

            <div
              data-plasmic-name={"avatar"}
              data-plasmic-override={overrides.avatar}
              className={classNames(defaultcss.all, sty.avatar)}
            >
              <div
                data-plasmic-name={"miscIconsBackground"}
                data-plasmic-override={overrides.miscIconsBackground}
                className={classNames(defaultcss.all, sty.miscIconsBackground)}
              >
                <div
                  data-plasmic-name={"iconsButton"}
                  data-plasmic-override={overrides.iconsButton}
                  className={classNames(defaultcss.all, sty.iconsButton)}
                />
              </div>

              <VectorIcon
                className={classNames(defaultcss.all, sty.svg___7LIpt)}
                role={"img"}
              />
            </div>

            <Vector2Icon
              className={classNames(defaultcss.all, sty.svg___1NdYy)}
              role={"img"}
            />

            <Vector3Icon
              className={classNames(defaultcss.all, sty.svg__mQaFc)}
              role={"img"}
            />

            <HomeIcon
              className={classNames(defaultcss.all, sty.svg__c21Cg)}
              role={"img"}
            />

            <div
              data-plasmic-name={"_03"}
              data-plasmic-override={overrides._03}
              className={classNames(defaultcss.all, sty._03)}
            >
              <div
                data-plasmic-name={"textOnlyWithButton"}
                data-plasmic-override={overrides.textOnlyWithButton}
                className={classNames(defaultcss.all, sty.textOnlyWithButton)}
              >
                <div
                  data-plasmic-name={"background"}
                  data-plasmic-override={overrides.background}
                  className={classNames(defaultcss.all, sty.background)}
                />

                <div
                  data-plasmic-name={"title"}
                  data-plasmic-override={overrides.title}
                  className={classNames(defaultcss.all, sty.title)}
                >
                  <div
                    data-plasmic-name={"title2"}
                    data-plasmic-override={overrides.title2}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.title2
                    )}
                  >
                    {"Fire Name/Location"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"body"}
                  data-plasmic-override={overrides.body}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.body
                  )}
                >
                  {"Date:\nTime:\nSource:\nReported by: (Person or ML)"}
                </div>

                <div
                  data-plasmic-name={"ghostDefaultLight"}
                  data-plasmic-override={overrides.ghostDefaultLight}
                  className={classNames(defaultcss.all, sty.ghostDefaultLight)}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"_8"}
              data-plasmic-override={overrides._8}
              className={classNames(defaultcss.all, sty._8)}
            >
              <div
                data-plasmic-name={"textOnlyWithButton2"}
                data-plasmic-override={overrides.textOnlyWithButton2}
                className={classNames(defaultcss.all, sty.textOnlyWithButton2)}
              >
                <div
                  data-plasmic-name={"background2"}
                  data-plasmic-override={overrides.background2}
                  className={classNames(defaultcss.all, sty.background2)}
                />

                <div
                  data-plasmic-name={"title3"}
                  data-plasmic-override={overrides.title3}
                  className={classNames(defaultcss.all, sty.title3)}
                >
                  <div
                    data-plasmic-name={"title4"}
                    data-plasmic-override={overrides.title4}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.title4
                    )}
                  >
                    {"Fire Name/Location"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"body2"}
                  data-plasmic-override={overrides.body2}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.body2
                  )}
                >
                  {"Date:\nTime:\nSource:\nReported by: (Person or ML)"}
                </div>

                <div
                  data-plasmic-name={"ghostDefaultLight2"}
                  data-plasmic-override={overrides.ghostDefaultLight2}
                  className={classNames(defaultcss.all, sty.ghostDefaultLight2)}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"_9"}
              data-plasmic-override={overrides._9}
              className={classNames(defaultcss.all, sty._9)}
            >
              <FireBlock
                data-plasmic-name={"fireBlock"}
                data-plasmic-override={overrides.fireBlock}
                className={classNames("__wab_instance", sty.fireBlock)}
              />
            </div>

            <div
              data-plasmic-name={"_7"}
              data-plasmic-override={overrides._7}
              className={classNames(defaultcss.all, sty._7)}
            >
              <div
                data-plasmic-name={"textOnlyWithButton4"}
                data-plasmic-override={overrides.textOnlyWithButton4}
                className={classNames(defaultcss.all, sty.textOnlyWithButton4)}
              >
                <div
                  data-plasmic-name={"background4"}
                  data-plasmic-override={overrides.background4}
                  className={classNames(defaultcss.all, sty.background4)}
                />

                <div
                  data-plasmic-name={"title7"}
                  data-plasmic-override={overrides.title7}
                  className={classNames(defaultcss.all, sty.title7)}
                >
                  <div
                    data-plasmic-name={"title8"}
                    data-plasmic-override={overrides.title8}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.title8
                    )}
                  >
                    {"Fire Name/Location"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"body4"}
                  data-plasmic-override={overrides.body4}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.body4
                  )}
                >
                  {"Date:\nTime:\nSource:\nReported by: (Person or ML)"}
                </div>

                <div
                  data-plasmic-name={"ghostDefaultLight4"}
                  data-plasmic-override={overrides.ghostDefaultLight4}
                  className={classNames(defaultcss.all, sty.ghostDefaultLight4)}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"_6"}
              data-plasmic-override={overrides._6}
              className={classNames(defaultcss.all, sty._6)}
            >
              <div
                data-plasmic-name={"textOnlyWithButton5"}
                data-plasmic-override={overrides.textOnlyWithButton5}
                className={classNames(defaultcss.all, sty.textOnlyWithButton5)}
              >
                <div
                  data-plasmic-name={"background5"}
                  data-plasmic-override={overrides.background5}
                  className={classNames(defaultcss.all, sty.background5)}
                />

                <div
                  data-plasmic-name={"title9"}
                  data-plasmic-override={overrides.title9}
                  className={classNames(defaultcss.all, sty.title9)}
                >
                  <div
                    data-plasmic-name={"title10"}
                    data-plasmic-override={overrides.title10}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.title10
                    )}
                  >
                    {"Fire Name/Location"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"body5"}
                  data-plasmic-override={overrides.body5}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.body5
                  )}
                >
                  {"Date:\nTime:\nSource:\nReported by: (Person or ML)"}
                </div>

                <div
                  data-plasmic-name={"ghostDefaultLight5"}
                  data-plasmic-override={overrides.ghostDefaultLight5}
                  className={classNames(defaultcss.all, sty.ghostDefaultLight5)}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"_4"}
              data-plasmic-override={overrides._4}
              className={classNames(defaultcss.all, sty._4)}
            >
              <div
                data-plasmic-name={"textOnlyWithButton6"}
                data-plasmic-override={overrides.textOnlyWithButton6}
                className={classNames(defaultcss.all, sty.textOnlyWithButton6)}
              >
                <div
                  data-plasmic-name={"background6"}
                  data-plasmic-override={overrides.background6}
                  className={classNames(defaultcss.all, sty.background6)}
                />

                <div
                  data-plasmic-name={"title11"}
                  data-plasmic-override={overrides.title11}
                  className={classNames(defaultcss.all, sty.title11)}
                >
                  <div
                    data-plasmic-name={"title12"}
                    data-plasmic-override={overrides.title12}
                    className={classNames(
                      defaultcss.all,
                      defaultcss.__wab_text,
                      sty.title12
                    )}
                  >
                    {"Fire Name/Location"}
                  </div>
                </div>

                <div
                  data-plasmic-name={"body6"}
                  data-plasmic-override={overrides.body6}
                  className={classNames(
                    defaultcss.all,
                    defaultcss.__wab_text,
                    sty.body6
                  )}
                >
                  {"Date:\nTime:\nSource:\nReported by: (Person or ML)"}
                </div>

                <div
                  data-plasmic-name={"ghostDefaultLight6"}
                  data-plasmic-override={overrides.ghostDefaultLight6}
                  className={classNames(defaultcss.all, sty.ghostDefaultLight6)}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "iPhone11ProMax6",
    "rectangle1",
    "avatar",
    "miscIconsBackground",
    "iconsButton",
    "_03",
    "textOnlyWithButton",
    "background",
    "title",
    "title2",
    "body",
    "ghostDefaultLight",
    "_8",
    "textOnlyWithButton2",
    "background2",
    "title3",
    "title4",
    "body2",
    "ghostDefaultLight2",
    "_9",
    "fireBlock",
    "_7",
    "textOnlyWithButton4",
    "background4",
    "title7",
    "title8",
    "body4",
    "ghostDefaultLight4",
    "_6",
    "textOnlyWithButton5",
    "background5",
    "title9",
    "title10",
    "body5",
    "ghostDefaultLight5",
    "_4",
    "textOnlyWithButton6",
    "background6",
    "title11",
    "title12",
    "body6",
    "ghostDefaultLight6"
  ],
  iPhone11ProMax6: [
    "iPhone11ProMax6",
    "rectangle1",
    "avatar",
    "miscIconsBackground",
    "iconsButton",
    "_03",
    "textOnlyWithButton",
    "background",
    "title",
    "title2",
    "body",
    "ghostDefaultLight",
    "_8",
    "textOnlyWithButton2",
    "background2",
    "title3",
    "title4",
    "body2",
    "ghostDefaultLight2",
    "_9",
    "fireBlock",
    "_7",
    "textOnlyWithButton4",
    "background4",
    "title7",
    "title8",
    "body4",
    "ghostDefaultLight4",
    "_6",
    "textOnlyWithButton5",
    "background5",
    "title9",
    "title10",
    "body5",
    "ghostDefaultLight5",
    "_4",
    "textOnlyWithButton6",
    "background6",
    "title11",
    "title12",
    "body6",
    "ghostDefaultLight6"
  ],
  rectangle1: ["rectangle1"],
  avatar: ["avatar", "miscIconsBackground", "iconsButton"],
  miscIconsBackground: ["miscIconsBackground", "iconsButton"],
  iconsButton: ["iconsButton"],
  _03: [
    "_03",
    "textOnlyWithButton",
    "background",
    "title",
    "title2",
    "body",
    "ghostDefaultLight"
  ],
  textOnlyWithButton: [
    "textOnlyWithButton",
    "background",
    "title",
    "title2",
    "body",
    "ghostDefaultLight"
  ],
  background: ["background"],
  title: ["title", "title2"],
  title2: ["title2"],
  body: ["body"],
  ghostDefaultLight: ["ghostDefaultLight"],
  _8: [
    "_8",
    "textOnlyWithButton2",
    "background2",
    "title3",
    "title4",
    "body2",
    "ghostDefaultLight2"
  ],
  textOnlyWithButton2: [
    "textOnlyWithButton2",
    "background2",
    "title3",
    "title4",
    "body2",
    "ghostDefaultLight2"
  ],
  background2: ["background2"],
  title3: ["title3", "title4"],
  title4: ["title4"],
  body2: ["body2"],
  ghostDefaultLight2: ["ghostDefaultLight2"],
  _9: ["_9", "fireBlock"],
  fireBlock: ["fireBlock"],
  _7: [
    "_7",
    "textOnlyWithButton4",
    "background4",
    "title7",
    "title8",
    "body4",
    "ghostDefaultLight4"
  ],
  textOnlyWithButton4: [
    "textOnlyWithButton4",
    "background4",
    "title7",
    "title8",
    "body4",
    "ghostDefaultLight4"
  ],
  background4: ["background4"],
  title7: ["title7", "title8"],
  title8: ["title8"],
  body4: ["body4"],
  ghostDefaultLight4: ["ghostDefaultLight4"],
  _6: [
    "_6",
    "textOnlyWithButton5",
    "background5",
    "title9",
    "title10",
    "body5",
    "ghostDefaultLight5"
  ],
  textOnlyWithButton5: [
    "textOnlyWithButton5",
    "background5",
    "title9",
    "title10",
    "body5",
    "ghostDefaultLight5"
  ],
  background5: ["background5"],
  title9: ["title9", "title10"],
  title10: ["title10"],
  body5: ["body5"],
  ghostDefaultLight5: ["ghostDefaultLight5"],
  _4: [
    "_4",
    "textOnlyWithButton6",
    "background6",
    "title11",
    "title12",
    "body6",
    "ghostDefaultLight6"
  ],
  textOnlyWithButton6: [
    "textOnlyWithButton6",
    "background6",
    "title11",
    "title12",
    "body6",
    "ghostDefaultLight6"
  ],
  background6: ["background6"],
  title11: ["title11", "title12"],
  title12: ["title12"],
  body6: ["body6"],
  ghostDefaultLight6: ["ghostDefaultLight6"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  iPhone11ProMax6: "div";
  rectangle1: "div";
  avatar: "div";
  miscIconsBackground: "div";
  iconsButton: "div";
  _03: "div";
  textOnlyWithButton: "div";
  background: "div";
  title: "div";
  title2: "div";
  body: "div";
  ghostDefaultLight: "div";
  _8: "div";
  textOnlyWithButton2: "div";
  background2: "div";
  title3: "div";
  title4: "div";
  body2: "div";
  ghostDefaultLight2: "div";
  _9: "div";
  fireBlock: typeof FireBlock;
  _7: "div";
  textOnlyWithButton4: "div";
  background4: "div";
  title7: "div";
  title8: "div";
  body4: "div";
  ghostDefaultLight4: "div";
  _6: "div";
  textOnlyWithButton5: "div";
  background5: "div";
  title9: "div";
  title10: "div";
  body5: "div";
  ghostDefaultLight5: "div";
  _4: "div";
  textOnlyWithButton6: "div";
  background6: "div";
  title11: "div";
  title12: "div";
  body6: "div";
  ghostDefaultLight6: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAllFireInfo__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAllFireInfo__VariantsArgs;
    args?: PlasmicAllFireInfo__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicAllFireInfo__Fetches;
  } & Omit<PlasmicAllFireInfo__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicAllFireInfo__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicAllFireInfo__ArgProps,
      internalVariantPropNames: PlasmicAllFireInfo__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicAllFireInfo__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAllFireInfo";
  } else {
    func.displayName = `PlasmicAllFireInfo.${nodeName}`;
  }
  return func;
}

export const PlasmicAllFireInfo = Object.assign(
  // Top-level PlasmicAllFireInfo renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    iPhone11ProMax6: makeNodeComponent("iPhone11ProMax6"),
    rectangle1: makeNodeComponent("rectangle1"),
    avatar: makeNodeComponent("avatar"),
    miscIconsBackground: makeNodeComponent("miscIconsBackground"),
    iconsButton: makeNodeComponent("iconsButton"),
    _03: makeNodeComponent("_03"),
    textOnlyWithButton: makeNodeComponent("textOnlyWithButton"),
    background: makeNodeComponent("background"),
    title: makeNodeComponent("title"),
    title2: makeNodeComponent("title2"),
    body: makeNodeComponent("body"),
    ghostDefaultLight: makeNodeComponent("ghostDefaultLight"),
    _8: makeNodeComponent("_8"),
    textOnlyWithButton2: makeNodeComponent("textOnlyWithButton2"),
    background2: makeNodeComponent("background2"),
    title3: makeNodeComponent("title3"),
    title4: makeNodeComponent("title4"),
    body2: makeNodeComponent("body2"),
    ghostDefaultLight2: makeNodeComponent("ghostDefaultLight2"),
    _9: makeNodeComponent("_9"),
    fireBlock: makeNodeComponent("fireBlock"),
    _7: makeNodeComponent("_7"),
    textOnlyWithButton4: makeNodeComponent("textOnlyWithButton4"),
    background4: makeNodeComponent("background4"),
    title7: makeNodeComponent("title7"),
    title8: makeNodeComponent("title8"),
    body4: makeNodeComponent("body4"),
    ghostDefaultLight4: makeNodeComponent("ghostDefaultLight4"),
    _6: makeNodeComponent("_6"),
    textOnlyWithButton5: makeNodeComponent("textOnlyWithButton5"),
    background5: makeNodeComponent("background5"),
    title9: makeNodeComponent("title9"),
    title10: makeNodeComponent("title10"),
    body5: makeNodeComponent("body5"),
    ghostDefaultLight5: makeNodeComponent("ghostDefaultLight5"),
    _4: makeNodeComponent("_4"),
    textOnlyWithButton6: makeNodeComponent("textOnlyWithButton6"),
    background6: makeNodeComponent("background6"),
    title11: makeNodeComponent("title11"),
    title12: makeNodeComponent("title12"),
    body6: makeNodeComponent("body6"),
    ghostDefaultLight6: makeNodeComponent("ghostDefaultLight6"),

    // Metadata about props expected for PlasmicAllFireInfo
    internalVariantProps: PlasmicAllFireInfo__VariantProps,
    internalArgProps: PlasmicAllFireInfo__ArgProps
  }
);

export default PlasmicAllFireInfo;
/* prettier-ignore-end */
