// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: iaGC8N7icN64RQS5kdk5ev
// Component: BhrVJdfdbx
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import HomeIcon from "../../HomeIcon"; // plasmic-import: -70jaFn1U1/component
import Alert from "../../Alert"; // plasmic-import: iSjyu56io1/component

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_fire_spot.module.css"; // plasmic-import: iaGC8N7icN64RQS5kdk5ev/projectcss
import * as sty from "./PlasmicAlert1.module.css"; // plasmic-import: BhrVJdfdbx/css

import VectorIcon from "./icons/PlasmicIcon__Vector"; // plasmic-import: saqBp-KweY/icon
import Vector2Icon from "./icons/PlasmicIcon__Vector2"; // plasmic-import: _hIlKDMChB/icon
import Vector3Icon from "./icons/PlasmicIcon__Vector3"; // plasmic-import: lIZFbyKS7s/icon
import Polygon1Icon from "./icons/PlasmicIcon__Polygon1"; // plasmic-import: 0k0WA1LIx4K/icon
import AlertCircleIcon from "./icons/PlasmicIcon__AlertCircle"; // plasmic-import: vAuCRuqwxP/icon
import Vector5Icon from "./icons/PlasmicIcon__Vector5"; // plasmic-import: IBr-aXC3d5G/icon
import ellipse6Ysh24KQ9ZS from "./images/ellipse6.svg"; // plasmic-import: YSH24kQ9zS/picture
import ellipse7VqBvOv75Vp from "./images/ellipse7.svg"; // plasmic-import: VqBvOV75VP/picture

export type PlasmicAlert1__VariantMembers = {};

export type PlasmicAlert1__VariantsArgs = {};
type VariantPropType = keyof PlasmicAlert1__VariantsArgs;
export const PlasmicAlert1__VariantProps = new Array<VariantPropType>();

export type PlasmicAlert1__ArgsType = {};
type ArgPropType = keyof PlasmicAlert1__ArgsType;
export const PlasmicAlert1__ArgProps = new Array<ArgPropType>();

export type PlasmicAlert1__OverridesType = {
  root?: p.Flex<"div">;
  iPhone11ProMax4?: p.Flex<"div">;
  screenShot20210714At3392?: p.Flex<"div">;
  rectangle1?: p.Flex<"div">;
  avatar?: p.Flex<"div">;
  miscIconsBackground?: p.Flex<"div">;
  iconsButton?: p.Flex<"div">;
  homeIcon?: p.Flex<typeof HomeIcon>;
  alert?: p.Flex<typeof Alert>;
};

export interface DefaultAlert1Props {
  className?: string;
}

function PlasmicAlert1__RenderFunc(props: {
  variants: PlasmicAlert1__VariantsArgs;
  args: PlasmicAlert1__ArgsType;
  overrides: PlasmicAlert1__OverridesType;
  dataFetches?: PlasmicAlert1__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  return (
    <React.Fragment>
      {}
      {}

      <div className={defaultcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            defaultcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"iPhone11ProMax4"}
            data-plasmic-override={overrides.iPhone11ProMax4}
            className={classNames(defaultcss.all, sty.iPhone11ProMax4)}
          >
            <div
              data-plasmic-name={"screenShot20210714At3392"}
              data-plasmic-override={overrides.screenShot20210714At3392}
              className={classNames(
                defaultcss.all,
                sty.screenShot20210714At3392
              )}
            />

            <div
              data-plasmic-name={"rectangle1"}
              data-plasmic-override={overrides.rectangle1}
              className={classNames(defaultcss.all, sty.rectangle1)}
            />

            <div
              data-plasmic-name={"avatar"}
              data-plasmic-override={overrides.avatar}
              className={classNames(defaultcss.all, sty.avatar)}
            >
              <div
                data-plasmic-name={"miscIconsBackground"}
                data-plasmic-override={overrides.miscIconsBackground}
                className={classNames(defaultcss.all, sty.miscIconsBackground)}
              >
                <div
                  data-plasmic-name={"iconsButton"}
                  data-plasmic-override={overrides.iconsButton}
                  className={classNames(defaultcss.all, sty.iconsButton)}
                />
              </div>

              <VectorIcon
                className={classNames(defaultcss.all, sty.svg__mbam)}
                role={"img"}
              />
            </div>

            <Vector2Icon
              className={classNames(defaultcss.all, sty.svg__nbC89)}
              role={"img"}
            />

            <Vector3Icon
              className={classNames(defaultcss.all, sty.svg__rJg1A)}
              role={"img"}
            />

            <HomeIcon
              data-plasmic-name={"homeIcon"}
              data-plasmic-override={overrides.homeIcon}
              className={classNames("__wab_instance", sty.homeIcon)}
            />

            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__zxwbt)}
              role={"img"}
              src={ellipse6Ysh24KQ9ZS}
            />

            <Polygon1Icon
              className={classNames(defaultcss.all, sty.svg__cJ71Z)}
              role={"img"}
            />

            <img
              alt={""}
              className={classNames(defaultcss.img, sty.img__t3E1S)}
              role={"img"}
              src={ellipse7VqBvOv75Vp}
            />

            <AlertCircleIcon
              className={classNames(defaultcss.all, sty.svg___9Uipx)}
              role={"img"}
            />

            <AlertCircleIcon
              className={classNames(defaultcss.all, sty.svg___0UCmg)}
              role={"img"}
            />

            <Alert
              data-plasmic-name={"alert"}
              data-plasmic-override={overrides.alert}
              className={classNames("__wab_instance", sty.alert)}
            />

            <Vector5Icon
              className={classNames(defaultcss.all, sty.svg__kHK7)}
              role={"img"}
            />
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "iPhone11ProMax4",
    "screenShot20210714At3392",
    "rectangle1",
    "avatar",
    "miscIconsBackground",
    "iconsButton",
    "homeIcon",
    "alert"
  ],
  iPhone11ProMax4: [
    "iPhone11ProMax4",
    "screenShot20210714At3392",
    "rectangle1",
    "avatar",
    "miscIconsBackground",
    "iconsButton",
    "homeIcon",
    "alert"
  ],
  screenShot20210714At3392: ["screenShot20210714At3392"],
  rectangle1: ["rectangle1"],
  avatar: ["avatar", "miscIconsBackground", "iconsButton"],
  miscIconsBackground: ["miscIconsBackground", "iconsButton"],
  iconsButton: ["iconsButton"],
  homeIcon: ["homeIcon"],
  alert: ["alert"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  iPhone11ProMax4: "div";
  screenShot20210714At3392: "div";
  rectangle1: "div";
  avatar: "div";
  miscIconsBackground: "div";
  iconsButton: "div";
  homeIcon: typeof HomeIcon;
  alert: typeof Alert;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAlert1__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAlert1__VariantsArgs;
    args?: PlasmicAlert1__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicAlert1__Fetches;
  } & Omit<PlasmicAlert1__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicAlert1__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicAlert1__ArgProps,
      internalVariantPropNames: PlasmicAlert1__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicAlert1__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAlert1";
  } else {
    func.displayName = `PlasmicAlert1.${nodeName}`;
  }
  return func;
}

export const PlasmicAlert1 = Object.assign(
  // Top-level PlasmicAlert1 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    iPhone11ProMax4: makeNodeComponent("iPhone11ProMax4"),
    screenShot20210714At3392: makeNodeComponent("screenShot20210714At3392"),
    rectangle1: makeNodeComponent("rectangle1"),
    avatar: makeNodeComponent("avatar"),
    miscIconsBackground: makeNodeComponent("miscIconsBackground"),
    iconsButton: makeNodeComponent("iconsButton"),
    homeIcon: makeNodeComponent("homeIcon"),
    alert: makeNodeComponent("alert"),

    // Metadata about props expected for PlasmicAlert1
    internalVariantProps: PlasmicAlert1__VariantProps,
    internalArgProps: PlasmicAlert1__ArgProps
  }
);

export default PlasmicAlert1;
/* prettier-ignore-end */
